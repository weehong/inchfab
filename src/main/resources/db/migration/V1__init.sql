-- Set timezone to UTC
SET TIME ZONE 'UTC';

-- Companies table
CREATE TABLE "companies"
(
    "id"    INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    "name"  VARCHAR(255) UNIQUE NOT NULL,
    "logo"  VARCHAR(512),
    "email" VARCHAR(255) CHECK (email ~* '^[A-Za-z0-9._%+-]+@[A-Za-z0-9.-]+\.[A-Za-z]{2,}$'
) ,
    "title" VARCHAR(255),
    "created_at" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP NOT NULL,
    "updated_at" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP NOT NULL
);

-- Update timestamp trigger
CREATE
OR REPLACE FUNCTION update_updated_at_column()
RETURNS TRIGGER AS $$
BEGIN
    NEW.updated_at
= CURRENT_TIMESTAMP;
RETURN NEW;
END;
$$
language 'plpgsql';

CREATE TRIGGER update_companies_updated_at
    BEFORE UPDATE
    ON companies
    FOR EACH ROW
    EXECUTE FUNCTION update_updated_at_column();

-- Projects table
CREATE TABLE "projects"
(
    "id"                                INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    "company_id"                        INTEGER                                            NOT NULL,
    "requester_id"                      VARCHAR(255)                                       NOT NULL,
    "submitter_id"                      VARCHAR(255)                                       NOT NULL,
    "requester_name"                    VARCHAR(255)                                       NOT NULL,
    "submitter_name"                    VARCHAR(255)                                       NOT NULL,
    "root_folder_id"                    VARCHAR(255),
    "project_folder_id"                 VARCHAR(255),
    "upload_file"                       VARCHAR(512),
    "name"                              VARCHAR(255)                                       NOT NULL,
    "wafer_size"                        INTEGER CHECK (wafer_size > 0),
    "labor_cost"                        DECIMAL(15, 2)           DEFAULT 0.00 CHECK (labor_cost >= 0),
    "electrical_cost"                   DECIMAL(15, 2)           DEFAULT 0.00 CHECK (electrical_cost >= 0),
    "substrate_type"                    VARCHAR(100),
    "total_time"                        DECIMAL(10, 2)           DEFAULT 0.00 CHECK (total_time >= 0),
    "total_time_cost"                   DECIMAL(15, 2)           DEFAULT 0.00 CHECK (total_time_cost >= 0),
    "total_labor_cost"                  DECIMAL(15, 2)           DEFAULT 0.00 CHECK (total_labor_cost >= 0),
    "total_periodic_cost"               DECIMAL(15, 2)           DEFAULT 0.00 CHECK (total_periodic_cost >= 0),
    "total_power_cost"                  DECIMAL(15, 2)           DEFAULT 0.00 CHECK (total_power_cost >= 0),
    "total_gas_cost"                    DECIMAL(15, 2)           DEFAULT 0.00 CHECK (total_gas_cost >= 0),
    "total_target_material_cost"        DECIMAL(15, 2)           DEFAULT 0.00 CHECK (total_target_material_cost >= 0),
    "total_wet_etchant_cost"            DECIMAL(15, 2)           DEFAULT 0.00 CHECK (total_wet_etchant_cost >= 0),
    "total_lithography_reagent_cost"    DECIMAL(15, 2)           DEFAULT 0.00 CHECK (total_lithography_reagent_cost >= 0),
    "total_metrology_inspection_cost"   DECIMAL(15, 2)           DEFAULT 0.00 CHECK (total_metrology_inspection_cost >= 0),
    "total_external_process_cost"       DECIMAL(15, 2)           DEFAULT 0.00 CHECK (total_external_process_cost >= 0),
    "total_manually_input_process_cost" DECIMAL(15, 2)           DEFAULT 0.00 CHECK (total_manually_input_process_cost >= 0),
    "total_substrate_cost"              DECIMAL(15, 2)           DEFAULT 0.00 CHECK (total_substrate_cost >= 0),
    "project_step"                      JSON,
    "status"                            BOOLEAN                  DEFAULT false             NOT NULL,
    "created_at"                        TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP NOT NULL,
    "updated_at"                        TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP NOT NULL,
    CONSTRAINT fk_company FOREIGN KEY ("company_id") REFERENCES "companies" ("id") ON DELETE RESTRICT
);

CREATE TRIGGER update_projects_updated_at
    BEFORE UPDATE
    ON projects
    FOR EACH ROW
    EXECUTE FUNCTION update_updated_at_column();

-- Project pricing table
CREATE TABLE "project_pricing"
(
    "id"                       INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    "project_id"               INTEGER                                            NOT NULL,
    "engineering_hours"        INTEGER                                            NOT NULL,
    "engineering_rate"         DECIMAL(10, 2)                                     NOT NULL,
    "mask_unit_price"          DECIMAL(10, 2)                                     NOT NULL,
    "mask_count"               INTEGER                                            NOT NULL,
    "min_lot_size"             INTEGER                                            NOT NULL,
    "process_margin"           DECIMAL(5, 2)                                      NOT NULL,
    "process_in_fab_cost"      DECIMAL(10, 2)                                     NOT NULL,
    "process_third_party_cost" DECIMAL(10, 2)                                     NOT NULL,
    "process_wafer_price"      DECIMAL(10, 2)                                     NOT NULL,
    "dev_margin"               DECIMAL(5, 2)                                      NOT NULL,
    "dev_price"                DECIMAL(10, 2)                                     NOT NULL,
    "prod_100_margin"          DECIMAL(5, 2)                                      NOT NULL,
    "prod_100_price"           DECIMAL(10, 2)                                     NOT NULL,
    "prod_1000_margin"         DECIMAL(5, 2)                                      NOT NULL,
    "prod_1000_price"          DECIMAL(10, 2)                                     NOT NULL,
    "total_engineering"        DECIMAL(10, 2)                                     NOT NULL,
    "total_wafer"              DECIMAL(10, 2)                                     NOT NULL,
    "total_mask"               DECIMAL(10, 2)                                     NOT NULL,
    "total_project"            DECIMAL(10, 2)                                     NOT NULL,
    "created_at"               TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP NOT NULL,
    "updated_at"               TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP NOT NULL,
    CONSTRAINT fk_project FOREIGN KEY ("project_id") REFERENCES "projects" ("id") ON DELETE CASCADE
);

CREATE TRIGGER update_project_pricing_updated_at
    BEFORE UPDATE
    ON project_pricing
    FOR EACH ROW
    EXECUTE FUNCTION update_updated_at_column();

-- Create indexes
CREATE INDEX idx_projects_company_id ON projects (company_id);
CREATE INDEX idx_projects_status ON projects (status);
CREATE INDEX idx_projects_created_at ON projects (created_at);
CREATE INDEX idx_project_pricing_project_id ON project_pricing (project_id);